#!/bin/bash
#
# yawn - sleepyti.me for the command line
# 
# Determine the best times to fall asleep or wake up.
#
# By Jico Baligod
# www.baligod.com
# Copyright under the MIT License.
#

# Average time to fall asleep in seconds
fall=$((14*60))

# Sleep CYCLE in seconds
CYCLE=5400

PLATFORM=`uname`

# Current UNIX timestamp
now=`date "+%s"`

# Current hour
hour=`date "+%H"`

# Current minute
minute=`date "+%M"`

# Some pretty colors
CYAN="\033[0;36m"
LCYAN="\033[1;36m"
LGREEN="\033[1;32m"
LGRAY="\033[0;37m"
WHITE="\033[1;37m"

# Spectrum of colors (from first cycle to last)
colors=( $LGRAY $LGRAY $CYAN $LCYAN $LGREEN $LGREEN )

# Convert a UNIX timestamp to a date
function tsToDate {
  if [ $PLATFORM = "Darwin" ]; then
    echo `date -r $1 "+%I:%M%p"`
  else
    echo `date -d @$1 "+%I:%M%p"`
  fi
}

# When are good times to wake up if one were to go to bed now
function optimalWake {
  echo -e "Wake up at:"
  let MARK=$(($now + $fall))
  for (( i=0;i<6;i++)); do
    MARK=$(($MARK + $CYCLE))
    TIMES[$i]=$(($MARK))
  done
  for (( i=0;i<6;i++)); do
    #tsToDate ${TIMES[${i}]}
    echo -ne ${colors[${i}]}
    echo -n "~  "
    tsToDate ${TIMES[${i}]}
    echo -ne "\033[0m"
  done
}

# When are good times to go to bed in order to wake up at time hh:mm
function optimalSleep {
  when=$1
  if [ $PLATFORM = "Darwin" ]; then
    target=`date -j -f "%l:%M%p" $when "+%s"`
  else
    target=`date -d $when "+%s"`
  fi
  
  # Bump to next day if so
  if [[ "$target" < "$now" ]]; then
    target=$((target + 24*60*60))
  fi
  
  numCycles=$(( (target - now) / CYCLE ))
  limit=6
  if [[ "$numCycles" < "$limit" ]]; then
    limit=$numCycles
  fi

  echo -e "Go to bed at:"
  let MARK=$(($target - $fall))  
  for (( i=0;i<6;i++)); do
    MARK=$(($MARK - $CYCLE))
    TIMES[$i]=$(($MARK))
  done
  
  for (( i=0;i<limit;i++)); do
    echo -ne ${colors[${i}]}
    echo -n "~  "
    tsToDate ${TIMES[${i}]}
    echo -ne "\033[0m"
  done
}

# Run modes
#
# -n: Go to bed now, fall asleep in 14 minutes, when should I wake up?
DEFAULT="-n"

case "${1:-$DEFAULT}" in
  -n|--now)
    optimalWake
    ;;
  -w|--wake)
    optimalSleep $2
    ;;
  -h|--help)
    echo "yawn --- bedtime calculator
  * Calculations based on 90 minutes sleep cycles.
  * Average time to fall asleep is 14 minutes. All
    estimates include this time.
    (No need to add/subract this time)
    
Example usage:
yawn [-n|--now]
  Determine best times to wake up if you were to 
  go to bed now (and fall asleep in average time).
  
yawn [-w|--wake] HH:MM(am|pm)
  Determine when to go to bed.
  Includes average time to fall asleep (14 minutes).
  i.e. yawn -w 8:00am"
    ;;
  *)
    echo "illegal option $1: --help for usage info"
    ;;
esac